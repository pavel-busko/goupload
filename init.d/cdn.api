#!/bin/bash

# Source function library
. /etc/init.d/functions

# Dir with cdn.api config
CONF_DIR="/etc/cdn.api/"

# Run as user
API_USER=apache

# Path to binary
PROG=/usr/local/bin/cdn.api
PROCESS_NAME=cdn.api

# Path to the pid_file
PID_FILE=$(grep "pid_file" ${CONF_DIR}/api.toml | awk -F'"' '{print $2}')
RETVAL=0

case "$1" in
 start)
        PID=`pidofproc -p ${PID_FILE} ${PROCESS_NAME}`
        if [[ (-n ${PID}) && ($PID -gt 0) ]]; then
            echo "${PROCESS_NAME}(pid ${PID}) is  already running."
            exit 1;
        fi
        if [ -f ${PROG} ]; then
            echo "Starting ${PROCESS_NAME}"
            su - ${API_USER} -c "${PROG} ${CONF_DIR} >> /etc/cdn.api/api.log 2>> /etc/cdn.api/err.log &"
            RETVAL=$?
            echo "Waiting ${PROCESS_NAME} to launch on 8080..."

            while ! nc -z 192.168.33.10 8080; do   
                sleep 0.1
            done
            echo "${PROCESS_NAME} started with pid `cat ${PID_FILE}`"
        fi
        ;;
 stop)
        PID=`pidofproc -p ${PID_FILE} ${PROCESS_NAME}`
        if [[ -z ${PID} ]];then
            echo "${PROCESS_NAME} is not running."
            exit;
        fi
        if [ ${PID} -gt 0 ]; then
            echo "Stopping ${PROCESS_NAME}..."
            su - ${API_USER} -c "kill -15 ${PID}"
            RETVAL=$?
        fi
        ;;
 restart)
        $0 stop
        $0 start
        ;;
 status)
        status -p ${PID_FILE} ${PROCESS_NAME}
        RETVAL=$?
        ;;
 *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac
exit $RETVAL
