#!/bin/bash
#
# goupload
#
# chkconfig: 345 96 30
# description:  Start up the GOUPLOAD service.
#
# processname: goupload
# pidfile: /tmp/api.pid
#
### BEGIN INIT INFO
# Provides: goupload
# Required-Start: $network $syslog
# Required-Stop: $network $syslog
# Short-Description: start and stop GOUPLOAD service
# Description: GOUPLOAD is an API for CDN origin server.
## END INIT INFO

# Source function library
. /etc/init.d/functions

# Dir with cdn.api config
CONF_DIR="/etc/goupload/"

# Run as user
API_USER=apache

# Path to binary
PROG=/usr/local/bin/goupload
PROCESS_NAME=goupload

# Path to the pid_file
PID_FILE=$(grep "pid_file" ${CONF_DIR}/api.toml | awk -F'"' '{print $2}')

# Startup info
SOCK_TYPE=$(grep "socket_type" ${CONF_DIR}/api.toml | awk -F'"' '{print $2}')
TCP_ADDR=$(grep "tcp_socket" ${CONF_DIR}/api.toml | awk -F'"' '{print $2}')
UNIX_ADDR=$(grep "unix_socket" ${CONF_DIR}/api.toml | awk -F'"' '{print $2}')

RETVAL=0

case "$1" in
 start)
        PID=`pidofproc -p ${PID_FILE} ${PROCESS_NAME}`
        if [[ (-n ${PID}) && ($PID -gt 0) ]]; then
            echo "${PROCESS_NAME}(pid ${PID}) is  already running."
            exit $RETVAL;
        fi
        if [[ -f ${PROG} ]]; then
            echo "Starting ${PROCESS_NAME}"
            su - ${API_USER} -c "${PROG} ${CONF_DIR} >> /etc/goupload/api.log 2>> /etc/goupload/err.log &"
            RETVAL=$?

            if [[ ${SOCK_TYPE} = "tcp" ]]; then
                PORT=`echo ${TCP_ADDR} | awk -F':' '{print $2}'`
                IP=`echo ${TCP_ADDR} | awk -F':' '{print $1}'`
                echo "Waiting ${PROCESS_NAME} to launch on port ${PORT}..."
                while ! nc -z ${IP} ${PORT}; do   
                    sleep 0.1
                done
            elif [[ ${SOCK_TYPE} = "unix" ]]; then
                echo "Waiting ${PROCESS_NAME} to launch on socket ${UNIX_ADDR}..."
                while ! [[ -S ${UNIX_ADDR} ]]; do   
                    sleep 0.1
                done
            fi
            if [[ ${RETVAL} = 0 ]]; then
                echo "${PROCESS_NAME} started with pid `cat ${PID_FILE}`"
            else
                echo "Failed to start ${PROCESS_NAME}. Check error log for more info"
            fi
        fi
        ;;
 stop)
        PID=`pidofproc -p ${PID_FILE} ${PROCESS_NAME}`
        if [[ -z ${PID} ]];then
            echo "${PROCESS_NAME} is not running."
            exit;
        fi
        if [[ ${PID} -gt 0 ]]; then
            echo "Stopping ${PROCESS_NAME}..."
            su - ${API_USER} -c "kill -15 ${PID}"
            RETVAL=$?
        fi
        ;;
 restart)
        $0 stop
        $0 start
        ;;
 status)
        status -p ${PID_FILE} ${PROCESS_NAME}
        RETVAL=$?
        ;;
 *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac
exit $RETVAL
